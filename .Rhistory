length(training_gfc)
xreg_combined <- training_sars + training_gfc
xreg_combined
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = training_sars)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_sars)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_tbats_1$mean))^2)
#plot
plot(fcast_arrival_intervention, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = training_gfc)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_gfc)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_tbats_1$mean))^2)
#plot
plot(fcast_arrival_intervention, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = xreg_combined)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_gfc)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_tbats_1$mean))^2)
#plot
plot(fcast_arrival_intervention, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = "auto", xreg = training_gfc)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_gfc)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_tbats_1$mean))^2)
#plot
plot(fcast_arrival_intervention, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = "auto", xreg = training_gfc)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_gfc)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_tbats_1$mean))^2)
#plot
plot(fcast_arrival_intervention, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = training_gfc)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_gfc)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_tbats_1$mean))^2)
#plot
plot(fcast_arrival_intervention, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
knitr::opts_chunk$set(echo = TRUE)
# Clear working memory
rm(list=ls())
library(tidyverse)
library(fpp)
library(tseries)
library(ggplot2)
library(forecast)
library(plotly)
library(readxl)
library(xts)
library(TSA)
# set directory
#C:/Users/nugra/OneDrive - The University of Chicago/UChicago/Time Series HW/Final Project
setwd('C:/Users/Shofi/Desktop/Fall 2023/ADSP 31006 - Time Series Analysis and Forecasting/Final Project/forecast-tourist-arrival')
getwd()
# LOAD THE DATA
df_arrival <-read_xlsx('arrival.xlsx')
head(df_arrival)
# CREATING TIME SERIES DATA
arrival <- ts(df_arrival$arrival, start = c(2000,1), frequency = 12)
head(arrival)
gfc <- ts(df_arrival$gfc, start = c(2000,1), frequency = 12)
globcci <- ts(df_arrival$globcci, start = c(2000,1), frequency = 12)
geopol <- ts(df_arrival$geopol, start = c(2000,1), frequency = 12)
oil <- ts(df_arrival$oil, start = c(2000,1), frequency = 12)
sars <- ts(df_arrival$sars, start = c(2000,1), frequency = 12)
# PLOTTING
autoplot(arrival, main = "Monthly Tourist Arrival in Indonesia, January 2000 - December 2019",
ylab = "Tourist Arrival", xlab = "Year")
seasonplot(arrival, main = "Seasonal Plot of Tourist Arrival Indonesia,
January 2000 - December 2019")
# CHECKING THE NORMALITY
hist(arrival, main = "Histogram of Foreign Tourists Arrival in Indonesia,
January 2000 - December 2019")
shapiro.test(arrival)
# CUT AND SPLIT THE DATA
training_arrival <- window(arrival,  start = c(2000,1), end = c(2015,12))
test_arrival <- window(arrival, start= c(2016,1), end = c(2019,12))
training_geopol <- window(geopol,  start = c(2000,1), end = c(2015,12))
test_geopol <- window(geopol, start= c(2016,1), end = c(2019,12))
training_gfc <- window(gfc,  start = c(2000,1), end = c(2015,12))
test_gfc <- window(gfc, start= c(2016,1), end = c(2019,12))
training_globcci <- window(globcci,  start = c(2000,1), end = c(2015,12))
test_globcci <- window(globcci, start= c(2016,1), end = c(2019,12))
training_oil <- window(oil,  start = c(2000,1), end = c(2015,12))
test_oil <- window(oil, start= c(2016,1), end = c(2019,12))
training_sars <- window(sars,  start = c(2000,1), end = c(2015,12))
test_sars <- window(sars, start= c(2016,1), end = c(2019,12))
autoplot(training_arrival)
autoplot(test_arrival)
seasonplot(training_arrival)
# CHECKING THE NORMALITY
hist(training_arrival, main = "Histogram of Foreign Tourists Arrival in Indonesia,
January 2000 - December 2015")
shapiro.test(training_arrival)
# CHECKING STATIONARITY
tsdisplay(training_arrival, main = "ACF and PACF for Foreign Tourists Arrival in Indonesia,
January 2000 - December 2015")
acf(training_arrival)
pacf(training_arrival)
kpss.test(training_arrival)
adf.test(training_arrival)
# BOX COX TRANSFORMATION
auto_lambda <- BoxCox.lambda(training_arrival)
auto_lambda
training_arrival_bcauto <- BoxCox(training_arrival,auto_lambda)
plot(training_arrival_bcauto)
hist(training_arrival_bcauto)
shapiro.test(training_arrival_bcauto)
kpss.test(training_arrival_bcauto, null=c("Level"))
acf(training_arrival_bcauto)
pacf(training_arrival_bcauto)
eacf(training_arrival_bcauto)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = training_sars)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_sars)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
#BENCHMARK ETS MODEL - ANA (Seasonal Naive)
#Error type: Additive
#Trend type: None
#Season type: Additive
#model
model_ets_1 <- ets(training_arrival, model="ANA", lambda = 0)
fcast_ets_1 <- forecast(model_ets_1, h=48)
summary(model_ets_1)
aicc_ets_1 <- model_ets_1$aicc
bic_ets_1 <- model_ets_1$bic
checkresiduals(model_ets_1)
#accuracy forecast
accuracy_ets_1 <- accuracy(fcast_ets_1, test_arrival)
accuracy_ets_1
rmse_ets_1 <- accuracy_ets_1[4]
mape_ets_1 <- accuracy_ets_1[10]
mse_ets_1 <- mean(abs((test_arrival - fcast_ets_1$mean))^2)
#plot
max_test_arrival <- max(test_arrival)
min_value <- min(training_arrival)
custom_y_limits <- c(min_value, max_test_arrival)
plot(fcast_ets_1, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
#Comparison
compare_accuracy <- data.frame(Model = c("model:ETS - ANA"),
AIC = c(aicc_ets_1),
BIC = c(bic_ets_1),
RMSE = c(rmse_ets_1),
MAPE = c(mape_ets_1),
MSE = c(mse_ets_1))
compare_accuracy
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = training_sars)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_sars)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_tbats_1$mean))^2)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = training_sars)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_sars)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_arrival_intervention$mean))^2)
#plot
plot(fcast_arrival_intervention, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = training_gfc)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_gfc)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_arrival_intervention$mean))^2)
#plot
plot(fcast_arrival_intervention, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = xreg_combined)
# LOAD THE DATA
df_arrival <-read_xlsx('arrival.xlsx')
head(df_arrival)
# CREATING TIME SERIES DATA
arrival <- ts(df_arrival$arrival, start = c(2000,1), frequency = 12)
head(arrival)
gfc <- ts(df_arrival$gfc, start = c(2000,1), frequency = 12)
globcci <- ts(df_arrival$globcci, start = c(2000,1), frequency = 12)
geopol <- ts(df_arrival$geopol, start = c(2000,1), frequency = 12)
oil <- ts(df_arrival$oil, start = c(2000,1), frequency = 12)
sars <- ts(df_arrival$sars, start = c(2000,1), frequency = 12)
# PLOTTING
autoplot(arrival, main = "Monthly Tourist Arrival in Indonesia, January 2000 - December 2019",
ylab = "Tourist Arrival", xlab = "Year")
seasonplot(arrival, main = "Seasonal Plot of Tourist Arrival Indonesia,
January 2000 - December 2019")
# CUT AND SPLIT THE DATA
training_arrival <- window(arrival,  start = c(2000,1), end = c(2015,12))
test_arrival <- window(arrival, start= c(2016,1), end = c(2019,12))
training_geopol <- window(geopol,  start = c(2000,1), end = c(2015,12))
test_geopol <- window(geopol, start= c(2016,1), end = c(2019,12))
training_gfc <- window(gfc,  start = c(2000,1), end = c(2015,12))
test_gfc <- window(gfc, start= c(2016,1), end = c(2019,12))
training_gfc_0809 <- window(gfc_0809,  start = c(2000,1), end = c(2015,12))
# LOAD THE DATA
df_arrival <-read_xlsx('arrival.xlsx')
head(df_arrival)
# CREATING TIME SERIES DATA
arrival <- ts(df_arrival$arrival, start = c(2000,1), frequency = 12)
head(arrival)
gfc <- ts(df_arrival$gfc, start = c(2000,1), frequency = 12)
globcci <- ts(df_arrival$globcci, start = c(2000,1), frequency = 12)
geopol <- ts(df_arrival$geopol, start = c(2000,1), frequency = 12)
oil <- ts(df_arrival$oil, start = c(2000,1), frequency = 12)
sars <- ts(df_arrival$sars, start = c(2000,1), frequency = 12)
# PLOTTING
autoplot(arrival, main = "Monthly Tourist Arrival in Indonesia, January 2000 - December 2019",
ylab = "Tourist Arrival", xlab = "Year")
seasonplot(arrival, main = "Seasonal Plot of Tourist Arrival Indonesia,
January 2000 - December 2019")
View(df_arrival)
View(df_arrival)
# LOAD THE DATA
df_arrival <-read_xlsx('arrival.xlsx')
head(df_arrival)
# CREATING TIME SERIES DATA
arrival <- ts(df_arrival$arrival, start = c(2000,1), frequency = 12)
head(arrival)
gfc <- ts(df_arrival$gfc, start = c(2000,1), frequency = 12)
globcci <- ts(df_arrival$globcci, start = c(2000,1), frequency = 12)
geopol <- ts(df_arrival$geopol, start = c(2000,1), frequency = 12)
oil <- ts(df_arrival$oil, start = c(2000,1), frequency = 12)
sars <- ts(df_arrival$sars, start = c(2000,1), frequency = 12)
gfc_0809 <- ts(df_arrival$gfc_0809, start = c(2000,1), frequency = 12)
# PLOTTING
autoplot(arrival, main = "Monthly Tourist Arrival in Indonesia, January 2000 - December 2019",
ylab = "Tourist Arrival", xlab = "Year")
seasonplot(arrival, main = "Seasonal Plot of Tourist Arrival Indonesia,
January 2000 - December 2019")
# CUT AND SPLIT THE DATA
training_arrival <- window(arrival,  start = c(2000,1), end = c(2015,12))
test_arrival <- window(arrival, start= c(2016,1), end = c(2019,12))
training_geopol <- window(geopol,  start = c(2000,1), end = c(2015,12))
test_geopol <- window(geopol, start= c(2016,1), end = c(2019,12))
training_gfc <- window(gfc,  start = c(2000,1), end = c(2015,12))
test_gfc <- window(gfc, start= c(2016,1), end = c(2019,12))
training_gfc_0809 <- window(gfc_0809,  start = c(2000,1), end = c(2015,12))
test_gfc_0809 <- window(gfc_0809, start= c(2016,1), end = c(2019,12))
training_globcci <- window(globcci,  start = c(2000,1), end = c(2015,12))
test_globcci <- window(globcci, start= c(2016,1), end = c(2019,12))
training_oil <- window(oil,  start = c(2000,1), end = c(2015,12))
test_oil <- window(oil, start= c(2016,1), end = c(2019,12))
training_sars <- window(sars,  start = c(2000,1), end = c(2015,12))
test_sars <- window(sars, start= c(2016,1), end = c(2019,12))
autoplot(training_arrival)
autoplot(test_arrival)
seasonplot(training_arrival)
# CHECKING THE NORMALITY
hist(training_arrival, main = "Histogram of Foreign Tourists Arrival in Indonesia,
January 2000 - December 2015")
shapiro.test(training_arrival)
# CHECKING STATIONARITY
tsdisplay(training_arrival, main = "ACF and PACF for Foreign Tourists Arrival in Indonesia,
January 2000 - December 2015")
acf(training_arrival)
pacf(training_arrival)
kpss.test(training_arrival)
adf.test(training_arrival)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = training_gfc_0809)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_gfc_0809)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_tbats_1$mean))^2)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = training_gfc_0809)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_gfc_0809)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_arrival_intervention$mean))^2)
#plot
plot(fcast_arrival_intervention, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = training_gfc)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_gfc)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_arrival_intervention$mean))^2)
#plot
plot(fcast_arrival_intervention, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
# Intervensi
arrival_intervention <- auto.arima(training_arrival, lambda = 0, xreg = training_gfc_0809)
print(arrival_intervention)
aicc_arrival_intervention <- arrival_intervention$AICc
bic_arrival_intervention <- arrival_intervention$bic
fcast_arrival_intervention <- forecast(arrival_intervention , h=48, xreg=test_gfc_0809)
arrival_intervention
checkresiduals(arrival_intervention)
#plot
plot(arrival_intervention$fitted, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Fitted Plot", ylim = custom_y_limits)
lines(training_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Fitted", "Actual"), col = c("blue", "red"), lty = 1, lwd = 2)
#forecast
accuracy_fcast_arrival_intervention <- accuracy(fcast_arrival_intervention, test_arrival)
accuracy_fcast_arrival_intervention
rmse_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[4]
mape_fcast_arrival_intervention <- accuracy_fcast_arrival_intervention[10]
mse_fcast_arrival_intervention <- mean(abs((test_arrival - fcast_arrival_intervention$mean))^2)
#plot
plot(fcast_arrival_intervention, type = "l", col = "blue", lwd = 2, xlab = "Time", ylab = "Values", main = "Forecast Plot", ylim = custom_y_limits)
lines(test_arrival, type = "l", col = "red", lwd = 2)
grid()
legend("topleft", legend = c("Forecast", "Test Arrival"), col = c("blue", "red"), lty = 1, lwd = 2)
